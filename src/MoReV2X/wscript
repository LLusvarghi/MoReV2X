## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-
def build(bld):
    obj = bld.create_ns3_module('MoReV2X', ['network', 'antenna', 'buildings', 'lte'])
    obj.source = [
        'model/nist-header.cc',
        'model/nist-parabolic-3d-antenna-model.cc',
        'model/nr-v2x-propagation-loss-model.cc',
        'model/nist-lte-common.cc',
        'model/nr-v2x-spectrum-phy.cc',
        'model/nist-lte-spectrum-signal-parameters.cc',
        'model/nist-lte-phy.cc',
        'model/nr-v2x-ue-phy.cc',
        'model/nr-v2x-spectrum-value-helper.cc',
        'model/nist-lte-amc.cc',
        'model/nist-lte-ue-rrc.cc',
        'model/nist-lte-rrc-sap.cc',
        'model/nist-lte-rrc-protocol-ideal.cc',
        'model/nist-lte-rlc-sap.cc',
        'model/nist-lte-rlc.cc',
        'model/nist-lte-rlc-sequence-number.cc',
        'model/nist-lte-rlc-header.cc',
        'model/nist-lte-rlc-am-header.cc',
        'model/nist-lte-rlc-tm.cc',
        'model/nr-v2x-rlc-um.cc',
        'model/nist-lte-rlc-am.cc',
        'model/nist-lte-rlc-tag.cc',
        'model/nist-lte-rlc-sdu-status-tag.cc',
        'model/nist-lte-pdcp-sap.cc',
        'model/nist-lte-pdcp.cc',
        'model/nist-lte-pdcp-header.cc',
        'model/nist-lte-pdcp-tag.cc',
        'model/nist-eps-bearer.cc',
        'model/nist-lte-radio-bearer-info.cc',
        'model/nist-lte-net-device.cc',
        'model/nr-v2x-ue-net-device.cc',
        'model/nist-lte-control-messages.cc',
        'model/nr-v2x-phy-error-model.cc',
        'helper/nist-lte-helper.cc',
        'helper/nist-epc-helper.cc',
        'helper/nist-point-to-point-epc-helper.cc',
        'helper/nist-lte-prose-helper.cc',
        'model/nist-ff-mac-common.cc',
        'model/nist-lte-mac-sap.cc',
        'model/nist-lte-ue-cmac-sap.cc',
        'model/nr-v2x-ue-mac.cc',
        'model/nist-lte-radio-bearer-tag.cc',
        'model/nist-eps-bearer-tag.cc',
        'model/nist-lte-ue-phy-sap.cc',
        'model/nist-lte-ue-cphy-sap.cc',
        'model/nist-lte-interference.cc',
        'model/nist-lte-chunk-processor.cc',
        'model/nist-epc-gtpu-header.cc',
        'model/nist-epc-sgw-pgw-application.cc',
        'model/nist-epc-tft.cc',
        'model/nist-epc-tft-classifier.cc',
        'model/nist-lte-vendor-specific-parameters.cc',
        'model/nist-epc-s1ap-sap.cc',
        'model/nist-epc-s11-sap.cc',
        'model/nist-lte-as-sap.cc',
        'model/nist-epc-ue-nas.cc',
        'model/nist-lte-harq-phy.cc',
        'model/nist-epc-mme.cc',
        'model/nist-lte-asn1-header.cc',
        'model/nist-lte-rrc-header.cc',
        'model/nist-lte-ue-power-control.cc',
        'model/nist-sl-tft.cc',
        'model/nist-sl-pool.cc',
        'model/nist-sl-pool-factory.cc',
        'model/nist-sl-resource-pool-factory.cc',
        'model/nist-sl-preconfig-pool-factory.cc',
        'model/nist-lte-sl-chunk-processor.cc',
        'model/nist-lte-sl-interference.cc',
        'model/nr-v2x-tag.cc',
        'model/position-based-enabler.cc',
        'model/lte-node-state.cc',
        'model/nr-v2x-amc.cc',
        'model/nr-v2x-utils.cc',
        ]

    module_test = bld.create_ns3_module_test_library('MoReV2X')
    module_test.source = [        ]

    headers = bld(features='ns3header')
    headers.module = 'MoReV2X'
    headers.source = [
        'model/nist-header.h',
        'model/nist-parabolic-3d-antenna-model.h',
        'model/nr-v2x-propagation-loss-model.h',
        'model/nist-lte-common.h',
        'model/nr-v2x-spectrum-phy.h',
        'model/nist-lte-spectrum-signal-parameters.h',
        'model/nist-lte-phy.h',
        'model/nr-v2x-ue-phy.h',
        'model/nr-v2x-spectrum-value-helper.h',
        'model/nist-lte-amc.h',
        'model/nist-lte-ue-rrc.h',
        'model/nist-lte-rrc-sap.h',
        'model/nist-lte-rrc-protocol-ideal.h',
        'model/nist-lte-rlc-sap.h',
        'model/nist-lte-rlc.h',
        'model/nist-lte-rlc-header.h',
        'model/nist-lte-rlc-sequence-number.h',
        'model/nist-lte-rlc-am-header.h',
        'model/nist-lte-rlc-tm.h',
        'model/nr-v2x-rlc-um.h',
        'model/nist-lte-rlc-am.h',
        'model/nist-lte-rlc-tag.h',
        'model/nist-lte-rlc-sdu-status-tag.h',
        'model/nist-lte-pdcp-sap.h',
        'model/nist-lte-pdcp.h',
        'model/nist-lte-pdcp-header.h',
        'model/nist-lte-pdcp-tag.h',
        'model/nist-eps-bearer.h',
        'model/nist-lte-radio-bearer-info.h',
        'model/nist-lte-net-device.h',
        'model/nr-v2x-ue-net-device.h',
        'model/nist-lte-control-messages.h',
        'model/nr-v2x-phy-error-model.h',
        'helper/nist-lte-helper.h',
        'helper/nist-epc-helper.h',
        'helper/nist-point-to-point-epc-helper.h',
        'helper/nist-lte-prose-helper.h',
        'model/nist-ff-mac-common.h',
        'model/nist-lte-ue-cmac-sap.h',
        'model/nist-lte-mac-sap.h',
        'model/nr-v2x-ue-mac.h',
        'model/nist-lte-radio-bearer-tag.h',
        'model/nist-eps-bearer-tag.h',
        'model/nist-lte-ue-phy-sap.h',
        'model/nist-lte-ue-cphy-sap.h',
        'model/nist-lte-interference.h',
        'model/nist-lte-chunk-processor.h',
        'model/nist-epc-gtpu-header.h',
        'model/nist-epc-sgw-pgw-application.h',
        'model/nist-lte-vendor-specific-parameters.h',
        'model/nist-epc-tft.h',
        'model/nist-epc-tft-classifier.h',
        'model/nist-epc-s1ap-sap.h',
        'model/nist-epc-s11-sap.h',
        'model/nist-lte-as-sap.h',
        'model/nist-epc-ue-nas.h',
        'model/nist-lte-harq-phy.h',
        'model/nist-epc-mme.h',
        'model/nist-lte-asn1-header.h',
        'model/nist-lte-rrc-header.h',
        'model/nist-lte-ue-power-control.h',
        'model/nist-sl-tft.h',
        'model/nist-sl-pool.h',
        'model/nist-sl-pool-factory.h',
        'model/nist-sl-resource-pool-factory.h',
        'model/nist-sl-preconfig-pool-factory.h',
        'model/nist-lte-sl-chunk-processor.h',
        'model/nist-lte-sl-interference.h',
        'model/nr-v2x-tag.h',
        'model/position-based-enabler.h',
        'model/lte-node-state.h',
        'model/nr-v2x-amc.h',
        'model/nr-v2x-utils.h',
        ]

    if (bld.env['ENABLE_EXAMPLES']):
        bld.recurse('examples')

    bld.ns3_python_bindings()

